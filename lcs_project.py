# -*- coding: utf-8 -*-
"""lcs project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KmEbZ4wWw0a9aYiODu8OoVc5bRjHtRme
"""

DNA1 = "GTTTCCAATAAGTAA"
DNA2 = "CAGGGTATTGTAAAC"
print(DNA1)
print(DNA2)

def lcs(X,Y,m,n):
  L = [[0 for a in range (n+1)] for b in range (m+1)]
  for a in range(m+1):
    for b in range (n+1):
      if a == 0 or b == 0:
        L[a][b] = 0 
      elif X[a-1] == Y[b-1]:
          L [a][b] = L[a-1][b-1]+1
      else: 
        L[a][b] = max(L[a-1][b],L[a][b-1])
  lcs = ""
  i = m 
  j = n
  while i > 0 and j > 0:
    if X[i-1] == Y[i-1]:
      lcs += X[i-1]
      i -= 1 
      j -= 1
    elif L[i-1][j] > L[i][j-1]:
      i -= 1
    else: 
      j -= 1
    lcs = lcs[::-1]
  lent = str(len(lcs))
  print(" LCS of " + X + " and " + Y + " is " + lcs)
  print(" LCS has length " + lent)

X = DNA1
Y = DNA2
m = len(X) 
n = len(Y)
lcs(X, Y, m, n)